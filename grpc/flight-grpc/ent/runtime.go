// Code generated by ent, DO NOT EDIT.

package ent

import (
	"mock-project/grpc/flight-grpc/ent/flight"
	"mock-project/grpc/flight-grpc/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	flightFields := schema.Flight{}.Fields()
	_ = flightFields
	// flightDescAvailableFirstSlot is the schema descriptor for available_first_slot field.
	flightDescAvailableFirstSlot := flightFields[6].Descriptor()
	// flight.DefaultAvailableFirstSlot holds the default value on creation for the available_first_slot field.
	flight.DefaultAvailableFirstSlot = flightDescAvailableFirstSlot.Default.(int)
	// flight.AvailableFirstSlotValidator is a validator for the "available_first_slot" field. It is called by the builders before save.
	flight.AvailableFirstSlotValidator = flightDescAvailableFirstSlot.Validators[0].(func(int) error)
	// flightDescAvailableEconomySlot is the schema descriptor for available_economy_slot field.
	flightDescAvailableEconomySlot := flightFields[7].Descriptor()
	// flight.DefaultAvailableEconomySlot holds the default value on creation for the available_economy_slot field.
	flight.DefaultAvailableEconomySlot = flightDescAvailableEconomySlot.Default.(int)
	// flight.AvailableEconomySlotValidator is a validator for the "available_economy_slot" field. It is called by the builders before save.
	flight.AvailableEconomySlotValidator = flightDescAvailableEconomySlot.Validators[0].(func(int) error)
	// flightDescCreatedAt is the schema descriptor for created_at field.
	flightDescCreatedAt := flightFields[9].Descriptor()
	// flight.DefaultCreatedAt holds the default value on creation for the created_at field.
	flight.DefaultCreatedAt = flightDescCreatedAt.Default.(func() time.Time)
	// flightDescUpdatedAt is the schema descriptor for updated_at field.
	flightDescUpdatedAt := flightFields[10].Descriptor()
	// flight.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	flight.DefaultUpdatedAt = flightDescUpdatedAt.Default.(func() time.Time)
	// flight.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	flight.UpdateDefaultUpdatedAt = flightDescUpdatedAt.UpdateDefault.(func() time.Time)
	// flightDescID is the schema descriptor for id field.
	flightDescID := flightFields[0].Descriptor()
	// flight.DefaultID holds the default value on creation for the id field.
	flight.DefaultID = flightDescID.Default.(func() int64)
}
