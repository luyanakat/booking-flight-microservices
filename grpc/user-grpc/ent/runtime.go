// Code generated by ent, DO NOT EDIT.

package ent

import (
	"mock-project/grpc/user-grpc/ent/accesslevel"
	"mock-project/grpc/user-grpc/ent/schema"
	"mock-project/grpc/user-grpc/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	accesslevelFields := schema.AccessLevel{}.Fields()
	_ = accesslevelFields
	// accesslevelDescName is the schema descriptor for name field.
	accesslevelDescName := accesslevelFields[1].Descriptor()
	// accesslevel.NameValidator is a validator for the "name" field. It is called by the builders before save.
	accesslevel.NameValidator = accesslevelDescName.Validators[0].(func(string) error)
	// accesslevelDescCreatedAt is the schema descriptor for created_at field.
	accesslevelDescCreatedAt := accesslevelFields[2].Descriptor()
	// accesslevel.DefaultCreatedAt holds the default value on creation for the created_at field.
	accesslevel.DefaultCreatedAt = accesslevelDescCreatedAt.Default.(func() time.Time)
	// accesslevelDescUpdatedAt is the schema descriptor for updated_at field.
	accesslevelDescUpdatedAt := accesslevelFields[3].Descriptor()
	// accesslevel.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	accesslevel.DefaultUpdatedAt = accesslevelDescUpdatedAt.Default.(func() time.Time)
	// accesslevel.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	accesslevel.UpdateDefaultUpdatedAt = accesslevelDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescAccessID is the schema descriptor for access_id field.
	userDescAccessID := userFields[4].Descriptor()
	// user.DefaultAccessID holds the default value on creation for the access_id field.
	user.DefaultAccessID = userDescAccessID.Default.(int64)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[6].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() int64)
}
